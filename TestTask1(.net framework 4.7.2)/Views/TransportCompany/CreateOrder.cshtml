@using Core;
@model TestTask1_.net_framework_4._7._2_.Models.ViewModels.ViewModelOrder


@{
    ViewBag.Title = "AddOrder";
}

<h2>AddOrder</h2>

@using (Html.BeginForm("CreateOrder", "TransportCompany", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Order</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SurName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SurName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SurName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstPlace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstPlace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstPlace, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastPlace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastPlace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastPlace, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="createOrder" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@if (ViewBag.Orders != null)
{
    <ol class="list-group list-group-numbered">
        @foreach (Order item in ViewBag.Orders)
        {
           // @using (Html.BeginForm("ShowTc", "TransportCompany", FormMethod.Post))
            //{
                <li class="list-group-item d-flex justify-content-between align-items-start">
                    <div class="ms-2 me-auto">
                        @*<div class="fw-bold">
                            <b>
                                @Html.EditorFor(item => item.Size, new { htmlAttributes = new { @class = "form-control" } })
                            </b>
                        </div>*@
                        <div class="fw-bold"><b>@item.Tc.Name</b></div>
                        Расстояние: @item.Distance км
                    </div>
                    <span class="">
                        <a asp-controller="TransportСompany" asp-action="TcShow" asp-all-route-data='new Dictionary<string,string> { { "FirstName", @item.FirstName }, {"SurName", @item.SurName },
                { "FirstPlace", @item.FirstPlace },{"LastPlace", @item.LastPlace},{"Phone", Convert.ToString(@item.Phone)},
                {"Weight", Convert.ToString(@item.Weight)}, {"Size",Convert.ToString(@item.Size)}, {"Distance",Convert.ToString(@item.Distance)},
                {"Company",Convert.ToString(@item.Tc.Id)}, {"Price",Convert.ToString(@item.Price)}}'>@item.Price р</a>
                    </span>
                </li>
             }
         }

        </ol>
}